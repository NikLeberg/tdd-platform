{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "2.0.0",
    "inputs": [
        {
            // https://github.com/microsoft/vscode-cpptools/issues/6476
            "id": "platform",
            "type": "command",
            "command": "cpptools.activeConfigCustomVariable",
            "args": "platform"
        },
        {
            "id": "runCommand",
            "type": "command",
            "command": "cpptools.activeConfigCustomVariable",
            "args": "runCommand"
        }
    ],
    "options": {
        "cwd": "${workspaceFolder}/build/${input:platform}"
    },
    "problemMatcher": "$gcc",
    "presentation": {
        "showReuseMessage": false,
        "clear": true
    },
    "tasks": [
        {
            "label": "setup-buildfolder",
            "detail": "Setup build-subfolder for currently selected platform.",
            "type": "shell",
            "command": "mkdir -p build/${input:platform}",
            "options": {
                "cwd": "${workspaceFolder}"
            }
        },
        {
            "label": "generate",
            "detail": "Generate buildsystem with cmake.",
            "type": "shell",
            "command": "cmake ./../.. -DPLATFORM=${input:platform}",
            "dependsOn": "setup-buildfolder"
        },
        {
            "label": "clean",
            "detail": "Clean generated files from last build.",
            "type": "shell",
            "command": "make clean",
            "presentation": {
                "close": true
            }
        },
        {
            "label": "build",
            "detail": "Build the project with gcc.",
            "type": "shell",
            "command": "make all"
        },
        {
            "label": "tests",
            "detail": "Run all tests.",
            "type": "shell",
            "command": "make tests"
        },
        {
            "label": "doc",
            "detail": "Generate HTML documentation for source code.",
            "type": "shell",
            "command": "make doc"
        },
        {
            "label": "run",
            "detail": "Run application.",
            "type": "shell",
            "command": "${input:runCommand}"
        }
    ]
}